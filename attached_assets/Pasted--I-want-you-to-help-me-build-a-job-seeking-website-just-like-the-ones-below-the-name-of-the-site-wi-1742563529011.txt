

I want you to help me build a job seeking website just like the ones below the name of the site will be called “seek with Dami” it will have a landing page,signup and login page,and the dashboard after the user login note the user can only search for job after they login and pls make sure u make use of all the info I provided below to give me the best


Example websites:
Glassdoor https://www.glassdoor.com
ZipRecruiter: https://www.ziprecruiter.com
AngelList: https://angel.co/
1. Authentication Interfaces
	•	Create Sign Up and Login pages for Job Seekers, Employers, and Admins.
	•	Implement form validation (email format, password strength, required fields).
	•	Integrate with backend authentication API (JWT tokens).

2. User Dashboards
	•	Job Seeker Dashboard:
	•	Profile creation and editing form (upload CV, add skills, etc.).
	•	View applied jobs, saved jobs, and application status updates.
	•	Employer Dashboard:
	•	Form to create job postings.
	•	View all posted jobs, edit, and delete job posts.
	•	View list of applicants and their application status.
	•	Admin Dashboard:
	•	List all users and jobs.
	•	Activate/deactivate user accounts.
	•	Approve or reject job postings.

3. Job Listings and Search
	•	Display job cards showing job title, company logo, location, job type, and salary.
	•	Implement search functionality (by job title, location, company, job type).
	•	Add filter options (remote, full-time, part-time, salary range).
	•	Create a job details page with full description and apply button.

4. Application Process
	•	Implement Apply buttons on job cards/details pages.
	•	Application form submission and file upload (CV/Resume) handling.
	•	“Save Job” (Bookmark) feature for logged-in users.

5. UI/UX Design & Responsiveness
	•	Ensure mobile responsiveness across all screens.
	•	Use consistent UI components for buttons, modals, cards, etc.
	•	Add user feedback: loaders, success/error messages, and alerts.

6. API Integration
	•	Connect all pages with backend APIs for CRUD operations.
	•	Handle authentication tokens and authorization in requests.
	•	Error handling and user notifications for API responses.